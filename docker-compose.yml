services:
  stablediffusion:
    profiles:
      - stablediffusion
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities:
                - gpu
    build: ./docker/stablediffusion
    restart: unless-stopped
    volumes:
      - ./docker/stablediffusion/src:/usr/src/app
    labels:
      - "traefik.http.routers.sd-secure.rule=Host(`127.0.0.1`) || Host(`sd.traefik.me`)"
      - "traefik.http.routers.sd-secure.tls=true"
      - "traefik.http.routers.sd.rule=Host(`127.0.0.1`) || Host(`sd.traefik.me`)"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
    command: ./webui.sh --listen
    ports:
      - "7860:7860"
  
  flowise:
    profiles:
      - flowise
    build: ./docker/flowise
    env_file: ./docker/flowise/.env
    restart: unless-stopped
    volumes:
      - ./docker/flowise/.flowise:/root/.flowise
    labels:
      - "traefik.http.routers.flowise-secure.rule=Host(`127.0.0.1`) || Host(`flowise.traefik.me`)"
      - "traefik.http.routers.flowise-secure.tls=true"
      - "traefik.http.routers.flowise.rule=Host(`127.0.0.1`) || Host(`flowise.traefik.me`)"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
    ports:
      - '8282:8282'
  
  langflow:
    profiles:
      - langflow
    build: ./docker/langflow
    env_file: ./docker/langflow/.env
    restart: unless-stopped
    volumes:
      - ./docker/langflow/storage:/app/langflow
    labels:
      - "traefik.http.routers.langflow-secure.rule=Host(`127.0.0.1`) || Host(`langflow.traefik.me`)"
      - "traefik.http.routers.langflow-secure.tls=true"
      - "traefik.http.routers.langflow.rule=Host(`127.0.0.1`) || Host(`langflow.traefik.me`)"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
    ports:
      - '7862:7860'

  database:
    image: mysql:8.0.32
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: aisuite
      MYSQL_USER: aisuite
      MYSQL_PASSWORD: xxaisuitexx
      MYSQL_DATABASE: aisuite
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql:/var/lib/mysql

  redis:
    image: redis:alpine
    environment:
      - REDIS_HOST=redis
    volumes:
      - ./docker/redis:/data

  chromadb:
    profiles:
      - chromadb
    restart: unless-stopped
    image: chromadb/chroma:latest
    env_file: ./docker/chromadb/.env
    volumes:
      - ./docker/chromadb/storage:/chroma/chroma
    ports:
      - 8000:8000
  
  qdrant:
    profiles:
      - qdrant
      - default
    restart: unless-stopped
    image: qdrant/qdrant
    env_file: ./docker/chromadb/.env
    volumes:
      - ./docker/qdrant/storage:/qdrant/storage
    labels:
      - "traefik.http.routers.qdrant-secure.rule=Host(`127.0.0.1`) || Host(`qdrant.traefik.me`)"
      - "traefik.http.routers.qdrant-secure.tls=true"
      - "traefik.http.routers.qdrant.rule=Host(`127.0.0.1`) || Host(`qdrant.traefik.me`)"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
    ports:
      - 6333:6333

  localai:
    profiles:
      - localai
      - default
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities:
                - gpu
    build: ./docker/localai
    env_file: ./docker/localai/.env
    restart: unless-stopped
    volumes:
      - ./docker/localai/storage:/build/models
    labels:
      - "traefik.http.routers.localai-secure.rule=Host(`127.0.0.1`) || Host(`localai.traefik.me`)"
      - "traefik.http.routers.localai-secure.tls=true"
      - "traefik.http.routers.localai.rule=Host(`127.0.0.1`) || Host(`localai.traefik.me`)"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
    ports:
        - 8081:8080

  ollama:
    profiles:
      - ollama
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ./docker/ollama/storage:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ollama list || exit 1
      interval: 60s
      timeout: 80s
      retries: 5
      start_period: 10s
    labels:
      - "traefik.http.routers.ollama-secure.rule=Host(`127.0.0.1`) || Host(`ollama.traefik.me`)"
      - "traefik.http.routers.ollama-secure.tls=true"
      - "traefik.http.routers.ollama.rule=Host(`127.0.0.1`) || Host(`ollama.traefik.me`)"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"

  n8n:
    profiles:
      - n8n
      - default
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities:
                - gpu
    build: ./docker/n8n
    env_file: ./docker/n8n/.env
    restart: on-failure
    volumes:
      - ./docker/n8n/custom-nodes:/home/node/.n8n/custom-nodes
      - ./docker/n8n/storage:/home/node/.n8n
      - ./docker/n8n/templates:/home/node/templates
      - ./docker/n8n/projects:/home/node/projects
    labels:
      - "traefik.http.routers.n8n-secure.rule=Host(`127.0.0.1`) || Host(`n8n.traefik.me`)"
      - "traefik.http.routers.n8n-secure.tls=true"
      - "traefik.http.routers.n8n.rule=Host(`127.0.0.1`) || Host(`n8n.traefik.me`)"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
    ports:
        - 8181:5678

  vllm:
    profiles:
      - vllm
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities:
                - gpu
    labels:
      - "traefik.http.routers.vllm-secure.rule=Host(`127.0.0.1`) || Host(`vllm.traefik.me`)"
      - "traefik.http.routers.vllm-secure.tls=true"
      - "traefik.http.routers.vllm.rule=Host(`127.0.0.1`) || Host(`vllm.traefik.me`)"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
    ports:
      - 7474:7474
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
    image: vllm/vllm-openai:latest 
    command: --model meta-llama/Llama-3.3-70B-Instruct --port 7474 --max-model-len 65536 --max-num-seqs=8192

  traefik:
    restart: unless-stopped
    image: traefik:3.3.3
    ports:
      - "80:80"
      - "443:443"
      - "8180:8180"
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8180"
    volumes:
      - ./docker/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./docker/traefik/tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/traefik/cert:/etc/ssl/traefik
